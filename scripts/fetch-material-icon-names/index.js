const fs = require('fs')
const puppeteer = require('puppeteer')

// NOTE: Not sure why it cannot work with 'ts-node'.
// There will some sort of '__awaiter is not defined' error.

// NOTE: This script is NOT meant to be run upon checking out every new git branch
// or `git pull` or `git merge`. Only run this (may be) every once in a few months
// to see if there are new icons are added to the collection. The page is meant
// for users to actually browse through and search so let's not abuse the it
// with this script and make the world a better place for everyone.

/**
 * @returns {Promise<void>}
 */
async function runFetchMaterialIconNames() {

  // Init browser
  console.info('Initializing...')
  console.log('puppeteer', puppeteer)
  const browser = await puppeteer.launch()
  const page = await browser.newPage()

  // Go to Material Icons page
  console.info('Launching Material Icons page...')
  await page.goto('https://fonts.google.com/icons', { waitUntil: 'networkidle2' })
  await scrollToBottomUntilCannotScrollAnymore(page)
  await page.waitForSelector(
    '#main-content > icons-page > icons-group:nth-child(21) > div > button:nth-child(4) > span.icon-asset.material-icons-outlined.ng-star-inserted'
    // This is the last item in the page as of 03 December 2021
  )

  console.info('Getting icon names...')
  const pageContent = await page.content()
  // console.log('pageContent')
  // console.log(pageContent)
  const rawItemStack = pageContent.match(/class="icon-asset material-icons-outlined ng-star-inserted" style="">[a-z0-9_-]+</gi) || []

  // Example of <span> element in the page when loaded
  // <span _ngcontent-ano-c121="" class="icon-asset material-icons ng-star-inserted" style="">upgrade</span>

  /** @type {Array<string>} */
  let quotedIconNameStack = []
  for (const item of rawItemStack) {
    const iconName = parseRawItem(item)
    quotedIconNameStack.push(`'${iconName}'`)
  }
  quotedIconNameStack = [...new Set(quotedIconNameStack)]
  const now = new Date()
  fs.writeFileSync(
    './src/react/components/material-icon/icon-name.ts',
    [
      '/* eslint-disable */',
      '', // (Empty line)
      '// Please do not edit here.',
      '// This file was automatically generated by the script `yarn bot:muicon`.',
      '// To learn more, refer to `scripts/icon`',
      `// This file was last updated on ${now.toDateString()} ${now.toTimeString()}.`,
      '', // (Empty line)
      '/**',
      ' * @public',
      ' */',
      `export type MaterialIconName = ${quotedIconNameStack.join('|')}`,
      '', // (Empty line)
    ].join('\n'),
    'utf-8',
  )

  await browser.close()
  console.log(`Fetched ${quotedIconNameStack.length} icon names`)

}

runFetchMaterialIconNames()

/**
 * @param {string} value
 * @returns {string}
 */
function parseRawItem(value) {
  const frontSanitizedIconName = value.split(/">/)[1]
  const fullySanitizedIconName = frontSanitizedIconName.replace(/<.*$/, '')
  return fullySanitizedIconName
}

/**
 * @param {import('puppeteer').Page} page
 * @returns {Promise<void>}
 * @see https://stackoverflow.com/a/67829516/5810737
 */
async function scrollToBottomUntilCannotScrollAnymore(page) {
  await page.evaluate(async () => {
    let scrollPosition = 0
    let documentHeight = document.body.scrollHeight
    while (documentHeight > scrollPosition) {
      window.scrollBy(0, documentHeight)
      await new Promise(resolve => {
        setTimeout(resolve, 250 + Math.round(Math.random() * 750))
      })
      scrollPosition = documentHeight
      documentHeight = document.body.scrollHeight
    }
  })
}
