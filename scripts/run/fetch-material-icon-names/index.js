const fs = require('fs')
const puppeteer = require('puppeteer')

// NOTE: Not sure why it cannot work with 'ts-node'.
// There will some sort of '__awaiter is not defined' error.

// NOTE: This script is NOT meant to be run upon checking out every new git branch
// or `git pull` or `git merge`. Only run this (may be) every once in a few months
// to see if there are new icons are added to the collection. The page is meant
// for users to actually browse through and search so let's not abuse the it
// with this script and make the world a better place for everyone.

/**
 * @returns {Promise<void>}
 */
async function runFetchMaterialIconNames() {

  // Init browser
  console.info('Initializing...')
  const browser = await puppeteer.launch({ slowMo: 500, headless: false })
  const page = await browser.newPage()

  // Go to Material Icons page
  console.info('Launching Material Icons page...')
  await page.goto('https://fonts.google.com/icons', { waitUntil: 'networkidle2' })

  // This is how the page is structured and how it can be navigated as of 30 April 2023.

  console.info('Switching from Material Symbols to Material Icons...')
  // Default is now Material Symbols, we need to switch to Icons
  await page.click('#main-content > icons-page > icons-toolbar > form > div > icons-toolbar-group.iconsets-group.right-border.ng-star-inserted > div > button')
  await page.click('#mat-menu-panel-1 > div > div > button:nth-child(2)')

  console.info('Scrolling through the page...')
  await scrollToBottomUntilCannotScrollAnymore(page)
  await page.waitForSelector('#main-content > icons-page > div.aside-container.ng-star-inserted > icons-group:nth-child(19) > div > button:nth-child(28)')
  // This is the last item in the list so far.

  console.info('Getting icon names...')
  /** @type {Array<string>} */
  let quotedIconNameStack = await page.evaluate(() => {
    const arr = []
    const stack = document.querySelectorAll('button[class="ng-star-inserted"] > span > span')
    for (const item of stack) {
      arr.push(`'${item.textContent}'`)
    }
    return arr
  })
  // console.log({ quotedIconNameStack })
  if (quotedIconNameStack.length <= 0) {
    throw new Error('Unable to find any icons')
  }

  quotedIconNameStack = [...new Set(quotedIconNameStack)]
  const now = new Date()
  fs.writeFileSync(
    './src/react/components/material-icon/icon-name.ts',
    [
      '/* eslint-disable */',
      '', // (Empty line)
      '// Please do not edit here.',
      '// This file was automatically generated by the script `yarn bot:muicon`.',
      '// To learn more, refer to `scripts/run/fetch-material-icon-names`',
      '', // (Empty line)
      '/**',
      ` * Last updated: ${now.toDateString()} ${now.toTimeString()}`,
      ' * @public',
      ' */',
      `export type MaterialIconName = ${quotedIconNameStack.join('|')}`,
      '', // (Empty line)
    ].join('\n'),
    'utf-8',
  )

  await page.close()
  await browser.close()
  console.log(`Fetched ${quotedIconNameStack.length} icon names`)

}

// Disabled for good
// runFetchMaterialIconNames()

/**
 * @param {import('puppeteer').Page} page
 * @returns {Promise<void>}
 * @see https://stackoverflow.com/a/67829516/5810737
 */
async function scrollToBottomUntilCannotScrollAnymore(page) {
  await page.evaluate(async () => {
    let scrollPosition = 0
    let documentHeight = document.body.scrollHeight
    while (documentHeight > scrollPosition) {
      window.scrollBy(0, documentHeight)
      await new Promise(resolve => {
        setTimeout(() => { resolve() }, 500)
      })
      scrollPosition = documentHeight
      documentHeight = document.body.scrollHeight
    }
  })
}
