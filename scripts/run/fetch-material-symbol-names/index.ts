import fs from 'fs'
import puppeteer, { Page } from 'puppeteer'
import { DO_NOT_MODIFY_WARNING, Encoding, removeDuplicates } from '../../../packages/core/src'

async function main(): Promise<void> {

  console.info('Initializing...')
  const browser = await puppeteer.launch({ slowMo: 500, headless: false })
  const page = await browser.newPage()

  console.info('Launching Material Icons page...')
  const targetUrl = 'https://fonts.google.com/icons?icon.set=Material+Symbols'
  await page.goto(targetUrl, { waitUntil: 'networkidle2' })

  // This is how the page is structured and how it can be navigated as of 02 Sep 2024.

  console.info('Scrolling through the page...')
  await scrollToBottomUntilCannotScrollAnymore(page)
  await page.waitForSelector('#main-content > div > div > gf-icons > div > icons-page > icons-group:last-child')

  console.info('Getting icon names...')
  let quotedIconNameStack = await page.evaluate(() => {
    const arr: Array<string> = []
    // <gf-load-icon-font _ngcontent-ng-c651786718="" _nghost-ng-c1526427138="" class="">view_object_track</gf-load-icon-font>
    // #main-content > div > div > gf-icons > div > icons-page > icons-group:nth-child(18) > div > button.ng-star-inserted > span.icon-asset.material-symbols-outlined > gf-load-icon-font
    // const stack = document.querySelectorAll('button[class="ng-star-inserted"] > span > span')
    const stack = document.querySelectorAll('gf-load-icon-font')
    for (const item of stack) {
      arr.push(`'${item.textContent}'`)
    }
    return arr
  })

  console.info('Closing browser...')
  await page.close()
  await browser.close()

  // console.log({ quotedIconNameStack })
  if (quotedIconNameStack.length <= 0) {
    throw new Error('Unable to find any icons')
  }

  console.info('Writing to file...')
  quotedIconNameStack = removeDuplicates(quotedIconNameStack)
  const now = new Date()
  const fileTitle = './packages/react/src/material-symbols/names.ts'
  const bullet = '  | '
  const fileBody = [
    DO_NOT_MODIFY_WARNING,
    '// This file was automatically generated by the script `yarn bot:muicon`.',
    '// To learn more, refer to `scripts/run/fetch-material-symbol-names`',
    '', // (Empty line)
    'import { LenientString } from \'@glyph-cat/swiss-army-knife\'',
    '', // (Empty line)
    '/**',
    ` * Last updated: ${now.toDateString()} ${now.toTimeString()}`,
    ' * @public',
    ' */',
    `export type MaterialSymbolName = LenientString<`,
    bullet + quotedIconNameStack.join(`\n${bullet}`),
    '>',
    '', // (Empty line)
  ].join('\n')
  // console.log('=== fileTitle ===')
  // console.log(fileTitle)
  // console.log('=== fileBody ===')
  // console.log(fileBody)
  fs.writeFileSync(fileTitle, fileBody, Encoding.UTF_8)

}

main()

/**
 * @see https://stackoverflow.com/a/67829516/5810737
 */
async function scrollToBottomUntilCannotScrollAnymore(page: Page): Promise<void> {
  await page.evaluate(async () => {
    let scrollPosition = 0
    let documentHeight = document.body.scrollHeight
    while (documentHeight > scrollPosition) {
      window.scrollBy(0, documentHeight)
      await new Promise<void>(resolve => {
        setTimeout(() => { resolve() }, 500)
      })
      scrollPosition = documentHeight
      documentHeight = document.body.scrollHeight
    }
  })
}
